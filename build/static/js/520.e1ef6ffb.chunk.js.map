{"version":3,"file":"static/js/520.e1ef6ffb.chunk.js","mappings":"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","sources":["webpack://blocknite/./src/components/TitleBlock/style.module.scss?d739","components/TitleBlock/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titleBlock\":\"style_titleBlock__khSJb\",\"description\":\"style_description__AHPPF\",\"isMobile\":\"style_isMobile__weqsN\",\"descriptionBottom\":\"style_descriptionBottom__ivqYk\"};","import { memo, useEffect, useRef, useCallback } from 'react';\r\nimport { motion, useAnimation } from 'framer-motion';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { calcVW } from '../../utils/hooks/functions';\r\nimport { useStateProvider } from '../../context/state';\r\n\r\nimport styles from './style.module.scss';\r\n\r\ninterface TitleBlockProps {\r\n    title: string;\r\n    description?: string;\r\n    mobileClassName?: boolean;\r\n    descriptionBottom?: boolean;\r\n    secondTitle?: string;\r\n    withOutDescription?: boolean;\r\n}\r\n\r\nconst TitleBlock: React.FC<TitleBlockProps> = ({\r\n    title,\r\n    description = '',\r\n    mobileClassName = false,\r\n    descriptionBottom = false,\r\n    secondTitle,\r\n    withOutDescription = false\r\n}) => {\r\n    const { scrolling, windowWidth } = useStateProvider();\r\n    const controls = useAnimation();\r\n    const ref1 = useRef<HTMLDivElement>(null);\r\n\r\n    const titleControls = useAnimation();\r\n    const [refTitle, inVewTitle] = useInView({\r\n        triggerOnce: false,\r\n        threshold: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!scrolling && inVewTitle) {\r\n            titleControls.start('visible');\r\n        }\r\n    }, [inVewTitle, scrolling, titleControls]);\r\n\r\n    const checkCenter = useCallback(() => {\r\n        if (!(window as any)[\"scrolling\"]) {\r\n            if (ref1.current) {\r\n                const rect = ref1.current.getBoundingClientRect();\r\n                const windowHeight = window.innerHeight || document.documentElement.clientHeight;\r\n                const center = rect.top + rect.height / 2;\r\n\r\n                const isElementCentered = center > 0 && center < windowHeight / 2;\r\n                if (isElementCentered) {\r\n                    controls.start({\r\n                        width: calcVW('168px', (window as any).customWidth),\r\n                        transition: { duration: 0.5, ease: 'easeOut' }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }, [controls]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", checkCenter);\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", checkCenter);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.titleBlock}>\r\n                <div style={{ width: calcVW('168px', windowWidth), display: 'flex', justifyContent: 'center', alignItems: 'center' }} className={mobileClassName ? styles.isMobile : ''}>\r\n                    <motion.div\r\n                        ref={ref1}\r\n                        initial={{ width: '0', height: calcVW('29px', windowWidth) }}\r\n                        animate={controls}\r\n                        style={{\r\n                            height: calcVW('29px', windowWidth),\r\n                            overflow: 'hidden',\r\n                            position: 'relative',\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src='/icons/arrow-left.svg'\r\n                            className={styles.arrowIcon}\r\n                            style={{\r\n                                objectPosition: 'center',\r\n                                width: '100%',\r\n                                height: '100%',\r\n                            }}\r\n                            loading='lazy'\r\n                            alt=\"Arrow Left\"\r\n                        />\r\n                    </motion.div>\r\n                </div>\r\n                <motion.div\r\n                    ref={refTitle}\r\n                    animate={titleControls}\r\n                    initial=\"hidden\"\r\n                    variants={{\r\n                        hidden: { opacity: 0, transform: `translateY(${calcVW('-25px', windowWidth)})` },\r\n                        visible: {\r\n                            opacity: 1,\r\n                            transform: 'translateY(0)',\r\n                            transition: { duration: 0.8 }\r\n                        }\r\n                    }}\r\n                >\r\n                    <div>{mobileClassName && secondTitle ? secondTitle : title}</div>\r\n                </motion.div>\r\n\r\n                <div style={{ width: calcVW('168px', windowWidth), display: 'flex', justifyContent: 'center', alignItems: 'center' }} className={mobileClassName ? styles.isMobile : ''}>\r\n                    <motion.div\r\n                        initial={{ width: '0', height: calcVW('29px', windowWidth) }}\r\n                        animate={controls}\r\n                        style={{\r\n                            height: calcVW('29px', windowWidth),\r\n                            overflow: 'hidden',\r\n                            position: 'relative',\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src='/icons/arrow-right.svg'\r\n                            className={styles.arrowIcon}\r\n                            style={{\r\n                                objectPosition: 'center',\r\n                                width: '100%',\r\n                                height: '100%',\r\n                            }}\r\n                            loading='lazy'\r\n                            alt=\"Arrow Right\"\r\n                        />\r\n                    </motion.div>\r\n                </div>\r\n            </div>\r\n            {!withOutDescription && (\r\n                <motion.div\r\n                    className={`${styles.description} ${descriptionBottom ? styles.descriptionBottom : ''}`}\r\n                    animate={titleControls}\r\n                    initial=\"hidden\"\r\n                    variants={{\r\n                        hidden: { opacity: 0, transform: `translateY(${calcVW('-25px', windowWidth)})` },\r\n                        visible: {\r\n                            opacity: 1,\r\n                            transform: 'translateY(0)',\r\n                            transition: { duration: 0.8, delay: 0.8 }\r\n                        }\r\n                    }}\r\n                >\r\n                    {description}\r\n                </motion.div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default memo(TitleBlock);"],"names":["TitleBlock","_ref","title","description","mobileClassName","descriptionBottom","secondTitle","withOutDescription","scrolling","windowWidth","useStateProvider","controls","useAnimation","ref1","useRef","titleControls","refTitle","inVewTitle","useInView","triggerOnce","threshold","useEffect","start","checkCenter","useCallback","window","current","rect","getBoundingClientRect","windowHeight","innerHeight","document","documentElement","clientHeight","center","top","height","width","calcVW","customWidth","transition","duration","ease","addEventListener","removeEventListener","_jsxs","_Fragment","children","className","styles","titleBlock","_jsx","style","display","justifyContent","alignItems","isMobile","motion","div","ref","initial","animate","overflow","position","src","arrowIcon","objectPosition","loading","alt","variants","hidden","opacity","transform","concat","visible","delay","memo"],"sourceRoot":""}