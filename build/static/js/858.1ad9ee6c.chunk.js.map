{"version":3,"file":"static/js/858.1ad9ee6c.chunk.js","mappings":"iJACA,QAA4B,yBAA5B,EAAkE,0BAAlE,EAAoG,qBAApG,EAAkI,sBAAlI,EAA+J,oBAA/J,EAAgM,0BAAhM,EAAyO,4BAAzO,EAA4Q,oBAA5Q,EAA2S,wB,iCCI3S,MAAMA,GAAcC,EAAAA,EAAAA,OAAK,IAAM,uDAEzBC,EAASA,KACX,MAAM,KAAEC,EAAI,WAAEC,EAAU,YAAEC,EAAW,KAAEC,EAAI,YAAEC,IAAgBC,EAAAA,EAAAA,KAEvDC,GAAWC,EAAAA,EAAAA,cAAY,SAACC,GAAiD,IAArCC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,SAC7D,MAAMG,EAAUC,SAASC,eAAeP,GACpCK,IACAG,YAAW,KACPH,EAAQI,eAAe,CACnBC,SAAUT,EACVU,MAAO,UACT,GACH,KACHlB,EAAWO,GAEnB,GAAG,CAACP,IAEEmB,GAAkBb,EAAAA,EAAAA,cAAY,KAChCL,GAAY,EAAM,GACnB,CAACA,IAEEmB,GAAYC,EAAAA,EAAAA,UAAQ,KAAMC,EAAAA,EAAAA,GAAQnB,GAAaoB,KAAI,CAACC,EAAIC,KAC1DC,EAAAA,EAAAA,KAAA,OAEIC,UAAS,GAAAC,OAAKC,EAAiB,KAAAD,OAAIJ,EAAGjB,KAAOR,GAAQ8B,GACrDC,QAASA,KACL7B,GAAY,GACZI,EAASmB,EAAGjB,GAAG,EACjBwB,SAEDP,EAAGQ,MAPCP,MAST,CAAC1B,EAAMM,EAAUJ,EAAaE,IAE5B8B,GAAWZ,EAAAA,EAAAA,UAAQ,KAAMC,EAAAA,EAAAA,GAAQnB,GAAaoB,KAAI,CAACC,EAAIC,KACzDC,EAAAA,EAAAA,KAAC9B,EAAW,CAAC6B,MAAOA,EAAMM,UACtBG,EAAAA,EAAAA,MAAA,OACIP,UAAS,GAAAC,OAAKC,EAAiB,KAAAD,OAAIJ,EAAGjB,KAAOR,GAAQ8B,GACrDC,QAASA,IAAMzB,EAASmB,EAAGjB,IAAIwB,SAAA,CAE9BP,EAAGQ,MACJN,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,QANQJ,MAShC,CAAC1B,EAAMM,EAAUF,IAErB,OACI+B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAJ,SAAA,EACIG,EAAAA,EAAAA,MAAA,OAAKP,UAAS,GAAAC,OAAKC,EAAW,KAAAD,OAAI1B,GAAQ2B,GAAkBE,SAAA,EACxDG,EAAAA,EAAAA,MAAA,OAAKP,UAAWE,EAAkBE,SAAA,EAC9BL,EAAAA,EAAAA,KAAA,OAAKU,IAAI,kBAAkBC,IAAI,OAAOV,UAAWE,EAAaS,QAAQ,UACtEZ,EAAAA,EAAAA,KAAA,OAAKU,IAAI,wBAAwBC,IAAI,OAAOV,UAAWE,EAAqBC,QAASX,EAAiBmB,QAAQ,aAElHZ,EAAAA,EAAAA,KAAA,OAAAK,SAAMX,QAEVM,EAAAA,EAAAA,KAAA,OAAKC,UAAWE,EAAiBE,SAAEE,MACpC,EAIX,GAAeM,EAAAA,EAAAA,MAAKzC,E","sources":["webpack://blocknite/./src/components/NavBar/style.module.scss?66d4","components/NavBar/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__6NyzC\",\"navElement\":\"style_navElement__iiSHG\",\"round\":\"style_round__L1cV+\",\"active\":\"style_active__3m6oI\",\"menu\":\"style_menu__wH2LU\",\"menuHeader\":\"style_menuHeader__IPLyV\",\"menuOpenIcon\":\"style_menuOpenIcon__l6eds\",\"logo\":\"style_logo__WyV8I\",\"menuOpen\":\"style_menuOpen__0HuWB\"};","import { lazy, memo, useCallback, useMemo } from 'react';\nimport styles from './style.module.scss';\nimport { useStateProvider } from '../../context/state';\nimport { screens } from '../../constants/screens';\n\nconst AltarinText = lazy(() => import('../AnimatedText'));\n\nconst NavBar = () => {\n    const { page, updatePage, setOpenMenu, open, windowWidth } = useStateProvider();\n\n    const scrollTo = useCallback((id: string, type: ScrollBehavior = 'smooth') => {\n        const element = document.getElementById(id);\n        if (element) {\n            setTimeout(() => {\n                element.scrollIntoView({\n                    behavior: type,\n                    block: 'center'\n                });\n            }, 100);\n            updatePage(id);\n        }\n    }, [updatePage]);\n\n    const handleMenuClose = useCallback(() => {\n        setOpenMenu(false);\n    }, [setOpenMenu]);\n\n    const menuItems = useMemo(() => screens(windowWidth).map((el, index) => (\n        <div\n            key={index}\n            className={`${styles.navElement} ${el.id === page && styles.active}`}\n            onClick={() => {\n                setOpenMenu(false);\n                scrollTo(el.id);\n            }}\n        >\n            {el.name}\n        </div>\n    )), [page, scrollTo, setOpenMenu, windowWidth]);\n\n    const navItems = useMemo(() => screens(windowWidth).map((el, index) => (\n        <AltarinText index={index} key={index}>\n            <div\n                className={`${styles.navElement} ${el.id === page && styles.active}`}\n                onClick={() => scrollTo(el.id)}\n            >\n                {el.name}\n                <div className={styles.round} />\n            </div>\n        </AltarinText>\n    )), [page, scrollTo, windowWidth]);\n\n    return (\n        <>\n            <div className={`${styles.menu} ${open && styles.menuOpen}`}>\n                <div className={styles.menuHeader}>\n                    <img src=\"/logos/logo.png\" alt=\"logo\" className={styles.logo} loading='lazy' />\n                    <img src=\"/icons/menu-close.svg\" alt=\"menu\" className={styles.menuOpenIcon} onClick={handleMenuClose} loading='lazy' />\n                </div>\n                <div>{menuItems}</div>\n            </div>\n            <div className={styles.container}>{navItems}</div>\n        </>\n    );\n};\n\nexport default memo(NavBar);"],"names":["AltarinText","lazy","NavBar","page","updatePage","setOpenMenu","open","windowWidth","useStateProvider","scrollTo","useCallback","id","type","arguments","length","undefined","element","document","getElementById","setTimeout","scrollIntoView","behavior","block","handleMenuClose","menuItems","useMemo","screens","map","el","index","_jsx","className","concat","styles","onClick","children","name","navItems","_jsxs","_Fragment","src","alt","loading","memo"],"sourceRoot":""}