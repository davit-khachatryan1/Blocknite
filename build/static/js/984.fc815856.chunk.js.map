{"version":3,"file":"static/js/984.fc815856.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        scheduleRender: () => visualElement.scheduleRender(),\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.12\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","length","transformProps","has","startsWith","Math","sqrt","instantAnimationState","isNotNull","value","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","undefined","memo","callback","result","isAnimatable","name","Array","isArray","complex","test","BaseAnimation","constructor","autoplay","delay","repeatDelay","options","this","isStopped","hasAttemptedResolve","updateFinishedPromise","resolved","_resolved","flushKeyframeResolvers","onKeyframesResolved","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","concat","current","i","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","some","key","spring","restDelta","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverseEasing","backInOut","mirrorEasing","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","definition","invariant","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","from","to","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","invisibleValues","Set","mixNumber$1","getMixer","isCSSVariableToken","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","template","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","values","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","arguments","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","push","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","easing","splice","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","time","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","KeyframeResolver","KeyframeResolver$1","super","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","resolver","cancel","teardown","onStop","motionValue","onResolved","owner","resolveKeyframes","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Object","hasOwnProperty","call","Element","prototype","acceleratedValues","AcceleratedAnimation","DOMKeyframesResolver","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","element","valueName","keyframeOptions","animate","fill","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","set","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","getProps","supportsScrollTimeline","window","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","forEach","cancelTimeline","methodName","controls","animateMotionValue","transition","isHandoff","valueTransition","getValueTransition","getVelocity","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","get","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","transitionEnd","willChange","getValue","animationTypeState","animationState","getState","latestValues","valueTarget","HandoffAppearAnimations","appearId","getOptimisedAppearId","shouldReduceMotion","isWillChangeMotionValue","add","remove","setTarget","animateVariant","variant","resolveVariant","presenceContext","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","postRender","optimizedAppearDataAttribute","camelToDash","isKeyframesTarget","_delay","acos","Queue","order","scheduled","process","indexOf","delete","clear","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","useManualTiming","performance","keepAlive","immediate","requestAnimationFrame","clearTime","queueMicrotask","splitCSSVariableRegex","getVariableValue","depth","token","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","trim","isNumericalString","parseFloat","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","positionalKeys","originType","findDimensionValueType","targetType","isNumOrPxType","needsMeasurement","noneKeyframeIndexes","isZeroValueString","animatableTemplate","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureViewportBox","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","microtask","cancelMicrotask","isRefObject","ref","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","parent","useContext","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","getClosestProjectingNode","setOptions","alwaysMeasureLayout","scheduleRender","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","HandoffComplete","useIsomorphicLayoutEffect","updateFeatures","render","animateChanges","useEffect","completeHandoff","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileDrag","whileFocus","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","dimensionValueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","testValueType","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","split","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","degrees","vw","vh","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","translateZ","perspective","progressPercentage","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","getValueState","setMotionValue","resolveFinalValueInKeyframes","item","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","colorRegex","parsed","transformer","createUnitType","endsWith"],"sourceRoot":""}