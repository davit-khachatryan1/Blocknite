{"version":3,"file":"static/js/520.cce4ea5c.chunk.js","mappings":"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","sources":["webpack://blocknite/./src/components/TitleBlock/style.module.scss?d739","components/TitleBlock/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"titleBlock\":\"style_titleBlock__kZo1n\",\"description\":\"style_description__5SngD\",\"isMobile\":\"style_isMobile__rwC6r\",\"descriptionBottom\":\"style_descriptionBottom__4VAMm\"};","import { memo, useEffect, useRef, useCallback } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport { calcVW } from '../../utils/hooks/functions';\nimport { useStateProvider } from '../../context/state';\n\nimport styles from './style.module.scss';\n\ninterface TitleBlockProps {\n    title: string;\n    description?: string;\n    mobileClassName?: boolean;\n    descriptionBottom?: boolean;\n    secondTitle?: string;\n    withOutDescription?: boolean;\n}\n\nconst TitleBlock: React.FC<TitleBlockProps> = ({\n    title,\n    description = '',\n    mobileClassName = false,\n    descriptionBottom = false,\n    secondTitle,\n    withOutDescription = false\n}) => {\n    const { scrolling, windowWidth } = useStateProvider();\n    const controls = useAnimation();\n    const ref1 = useRef<HTMLDivElement>(null);\n\n    const titleControls = useAnimation();\n    const [refTitle, inVewTitle] = useInView({\n        triggerOnce: false,\n        threshold: 0,\n    });\n\n    useEffect(() => {\n        if (!scrolling && inVewTitle) {\n            titleControls.start('visible');\n        }\n    }, [inVewTitle, scrolling, titleControls]);\n\n    const checkCenter = useCallback(() => {\n        if (!(window as any)[\"scrolling\"]) {\n            if (ref1.current) {\n                const rect = ref1.current.getBoundingClientRect();\n                const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n                const center = rect.top + rect.height / 2;\n\n                const isElementCentered = center > 0 && center < windowHeight / 2;\n                if (isElementCentered) {\n                    controls.start({\n                        width: calcVW('168px', (window as any).customWidth),\n                        transition: { duration: 0.5, ease: 'easeOut' }\n                    });\n                }\n            }\n        }\n    }, [controls]);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", checkCenter);\n        return () => {\n            window.removeEventListener(\"scroll\", checkCenter);\n        };\n    }, []);\n\n    return (\n        <>\n            <div className={styles.titleBlock}>\n                <div style={{ width: calcVW('168px', windowWidth), display: 'flex', justifyContent: 'center', alignItems: 'center' }} className={mobileClassName ? styles.isMobile : ''}>\n                    <motion.div\n                        ref={ref1}\n                        initial={{ width: '0', height: calcVW('29px', windowWidth) }}\n                        animate={controls}\n                        style={{\n                            height: calcVW('29px', windowWidth),\n                            overflow: 'hidden',\n                            position: 'relative',\n                            display: 'flex',\n                            justifyContent: 'center'\n                        }}\n                    >\n                        <img\n                            src='/icons/arrow-left.svg'\n                            className={styles.arrowIcon}\n                            style={{\n                                objectPosition: 'center',\n                                width: '100%',\n                                height: '100%',\n                            }}\n                            loading='lazy'\n                            alt=\"Arrow Left\"\n                        />\n                    </motion.div>\n                </div>\n                <motion.div\n                    ref={refTitle}\n                    animate={titleControls}\n                    initial=\"hidden\"\n                    variants={{\n                        hidden: { opacity: 0, transform: `translateY(${calcVW('-25px', windowWidth)})` },\n                        visible: {\n                            opacity: 1,\n                            transform: 'translateY(0)',\n                            transition: { duration: 0.8 }\n                        }\n                    }}\n                >\n                    <div>{mobileClassName && secondTitle ? secondTitle : title}</div>\n                </motion.div>\n\n                <div style={{ width: calcVW('168px', windowWidth), display: 'flex', justifyContent: 'center', alignItems: 'center' }} className={mobileClassName ? styles.isMobile : ''}>\n                    <motion.div\n                        initial={{ width: '0', height: calcVW('29px', windowWidth) }}\n                        animate={controls}\n                        style={{\n                            height: calcVW('29px', windowWidth),\n                            overflow: 'hidden',\n                            position: 'relative',\n                            display: 'flex',\n                            justifyContent: 'center'\n                        }}\n                    >\n                        <img\n                            src='/icons/arrow-right.svg'\n                            className={styles.arrowIcon}\n                            style={{\n                                objectPosition: 'center',\n                                width: '100%',\n                                height: '100%',\n                            }}\n                            loading='lazy'\n                            alt=\"Arrow Right\"\n                        />\n                    </motion.div>\n                </div>\n            </div>\n            {!withOutDescription && (\n                <motion.div\n                    className={`${styles.description} ${descriptionBottom ? styles.descriptionBottom : ''}`}\n                    animate={titleControls}\n                    initial=\"hidden\"\n                    variants={{\n                        hidden: { opacity: 0, transform: `translateY(${calcVW('-25px', windowWidth)})` },\n                        visible: {\n                            opacity: 1,\n                            transform: 'translateY(0)',\n                            transition: { duration: 0.8, delay: 0.8 }\n                        }\n                    }}\n                >\n                    {description}\n                </motion.div>\n            )}\n        </>\n    );\n};\n\nexport default memo(TitleBlock);"],"names":["TitleBlock","_ref","title","description","mobileClassName","descriptionBottom","secondTitle","withOutDescription","scrolling","windowWidth","useStateProvider","controls","useAnimation","ref1","useRef","titleControls","refTitle","inVewTitle","useInView","triggerOnce","threshold","useEffect","start","checkCenter","useCallback","window","current","rect","getBoundingClientRect","windowHeight","innerHeight","document","documentElement","clientHeight","center","top","height","width","calcVW","customWidth","transition","duration","ease","addEventListener","removeEventListener","_jsxs","_Fragment","children","className","styles","titleBlock","_jsx","style","display","justifyContent","alignItems","isMobile","motion","div","ref","initial","animate","overflow","position","src","arrowIcon","objectPosition","loading","alt","variants","hidden","opacity","transform","concat","visible","delay","memo"],"sourceRoot":""}