{"version":3,"file":"static/js/690.fe05e14e.chunk.js","mappings":"2JACA,SAAgB,UAAY,yBAAyB,MAAQ,qBAAqB,WAAa,0BAA0B,MAAQ,qBAAqB,KAAO,oBAAoB,cAAc,2BAA2B,KAAO,oBAAoB,aAAa,0BAA0B,YAAc,4B,2CCc1S,MAAMA,EAA0CC,IAAsG,IAArG,MAAEC,GAAQ,EAAK,MAAEC,EAAQ,aAAY,MAAEC,EAAQ,GAAE,UAAEC,GAAY,EAAK,SAAEC,EAAW,EAAC,MAAEC,EAAQ,GAAGN,EAC5I,MAAMO,GAAWC,EAAAA,EAAAA,MACX,UAAEC,EAAS,YAAEC,IAAgBC,EAAAA,EAAAA,MAEnCC,EAAAA,EAAAA,YAAU,KACDH,IACGL,GAAaM,GAAe,MAC5BH,EAASM,MAAM,UAEvB,GACD,CAACT,EAAWK,EAAWC,EAAaH,IAEvC,MAAMO,GAAYC,EAAAA,EAAAA,UAAQ,MACtBC,eAAgBf,EAAQ,WAAa,aACrCA,MAAOA,EAAQ,OAAS,KACxB,CAACA,IAECgB,GAAWF,EAAAA,EAAAA,UAAQ,MACrBG,OAAQ,CAAEC,MAAO,KACjBC,QAAS,CACLD,OAAOE,EAAAA,EAAAA,IAAO,QAASX,EAAa,KACpCY,WAAY,CAAEjB,WAAUC,aAE5B,CAACI,EAAaL,EAAUC,IAE5B,OACIiB,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACPC,MAAO,CAAEC,SAAU,UACnBC,UAAS,GAAAC,OAAK5B,EAAQ6B,EAAO7B,MAAQ6B,EAAOC,MAC5CC,QAASzB,EACT0B,QAAQ,SACRhB,SAAUA,EAASiB,SAAA,CAElB/B,IAASgC,EAAAA,EAAAA,KAAA,OAAKP,UAAWE,EAAO3B,MAEjCoB,EAAAA,EAAAA,MAAA,OAAKK,UAAWE,EAAOM,UAAWV,MAAOZ,EAAUoB,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKP,UAAWE,EAAO5B,MAAMgC,SACxBhC,KAELiC,EAAAA,EAAAA,KAAA,OAAKE,IAAKpC,EAAQ,4BAA8B,2BAA4BqC,IAAI,GAAGV,UAAWE,EAAOS,YAAaC,QAAQ,UAC1HL,EAAAA,EAAAA,KAAA,OAAKE,IAAK,6BAA8BC,IAAI,GAAGV,UAAWE,EAAOW,WAAYD,QAAQ,cAEhF,EAIrB,GAAeE,EAAAA,EAAAA,MAAK3C,E","sources":["webpack://blocknite/./src/components/RoadMapCard/style.module.scss?6bb0","components/RoadMapCard/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__dtj0L\",\"title\":\"style_title__qSef6\",\"mobileIcon\":\"style_mobileIcon__EW4OQ\",\"right\":\"style_right__L68hY\",\"left\":\"style_left__27lIS\",\"first-short\":\"style_first-short__6F8Rx\",\"long\":\"style_long__BFkcC\",\"last-short\":\"style_last-short__5cBdq\",\"desktopIcon\":\"style_desktopIcon__yg2HY\"};","import { motion, useAnimation } from 'framer-motion';\r\nimport styles from './style.module.scss';\r\nimport { memo, useEffect, useMemo } from 'react';\r\nimport { calcVW } from '../../utils/hooks/functions';\r\nimport { useStateProvider } from '../../context/state';\r\n\r\ninterface RoadMapCardProps {\r\n    right?: boolean;\r\n    title?: string;\r\n    first?: string;\r\n    isAnimate?: boolean;\r\n    duration?: number;\r\n    delay?: number;\r\n}\r\n\r\nconst RoadMapCard: React.FC<RoadMapCardProps> = ({ right = false, title = 'Pre-Launch', first = '', isAnimate = false, duration = 0, delay = 0 }) => {\r\n    const controls = useAnimation();\r\n    const { scrolling, windowWidth } = useStateProvider();\r\n\r\n    useEffect(() => {\r\n        if (!scrolling) {\r\n            if (isAnimate || windowWidth <= 576) {\r\n                controls.start('visible');\r\n            }\r\n        }\r\n    }, [isAnimate, scrolling, windowWidth, controls]);\r\n\r\n    const cardStyle = useMemo(() => ({\r\n        justifyContent: right ? 'flex-end' : 'flex-start',\r\n        right: right ? 'auto' : 0\r\n    }), [right]);\r\n\r\n    const variants = useMemo(() => ({\r\n        hidden: { width: '0' },\r\n        visible: {\r\n            width: calcVW('358px', windowWidth, 288),\r\n            transition: { duration, delay }\r\n        }\r\n    }), [windowWidth, duration, delay]);\r\n\r\n    return (\r\n        <motion.div\r\n            style={{ overflow: 'hidden' }}\r\n            className={`${right ? styles.right : styles.left}`}\r\n            animate={controls}\r\n            initial='hidden'\r\n            variants={variants}\r\n        >\r\n            {first && <div className={styles[first]} />}\r\n\r\n            <div className={styles.container} style={cardStyle}>\r\n                <div className={styles.title}>\r\n                    {title}\r\n                </div>\r\n                <img src={right ? \"/icons/map-card-right.svg\" : \"/icons/map-card-left.svg\"} alt=\"\" className={styles.desktopIcon} loading='lazy' />\r\n                <img src={\"/icons/map-card-mobile.svg\"} alt=\"\" className={styles.mobileIcon} loading='lazy' />\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default memo(RoadMapCard);\r\n"],"names":["RoadMapCard","_ref","right","title","first","isAnimate","duration","delay","controls","useAnimation","scrolling","windowWidth","useStateProvider","useEffect","start","cardStyle","useMemo","justifyContent","variants","hidden","width","visible","calcVW","transition","_jsxs","motion","div","style","overflow","className","concat","styles","left","animate","initial","children","_jsx","container","src","alt","desktopIcon","loading","mobileIcon","memo"],"sourceRoot":""}