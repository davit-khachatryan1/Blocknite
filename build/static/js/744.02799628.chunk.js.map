{"version":3,"file":"static/js/744.02799628.chunk.js","mappings":"kIACA,QAA4B,yB,iCCG5B,MAAMA,GAAiBC,EAAAA,EAAAA,OAAK,IAAM,gCAU5BC,EAAgCC,IAAuD,IAAtD,GAAEC,EAAE,UAAEC,EAAS,SAAEC,EAAQ,YAAEC,EAAW,OAAEC,GAAQL,EACrF,MAAM,YAAEM,IAAgBC,EAAAA,EAAAA,MACjBC,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,GAE7CC,GAAgCC,EAAAA,EAAAA,UAAQ,MAC5CC,MAAO,OACPC,SAAU,WACVC,QAAS,OACTC,SAAU,SACVC,gBAAgB,OAADC,OAASZ,GAAe,IAAMF,EAAcD,EAAQ,QACjE,CAACG,EAAaF,EAAaD,IAEzBgB,GAAiCP,EAAAA,EAAAA,UAAQ,MAC7CC,MAAO,OACPO,OAAQ,OACRN,SAAU,WACVO,KAAM,EACNC,IAAK,KACH,IAEEC,GAAeX,EAAAA,EAAAA,UAAQ,MAC3BC,MAAO,OACPO,OAAQ,OACRJ,SAAU,YACR,IAYJ,OAVAQ,EAAAA,EAAAA,YAAU,KACR,GAAIlB,GAAeE,EAAe,CAChCC,GAAiB,GACjB,MAAMgB,EAAUC,YAAW,KACzBjB,GAAiB,GACjBkB,aAAaF,EAAQ,GACpB,IACL,IACC,CAACnB,KAGFsB,EAAAA,EAAAA,MAAA,OAAKC,MAAOlB,EAAgBmB,UAAWC,EAAkB9B,GAAIA,EAAG+B,SAAA,CAC7DxB,IACCyB,EAAAA,EAAAA,KAAA,OAAKJ,MAAOV,EAAgBa,UAC1BC,EAAAA,EAAAA,KAACpC,EAAc,IAAMS,GAAe,IAAMD,EAAO6B,OAAS7B,EAAO8B,aAGrEF,EAAAA,EAAAA,KAAA,OAAKJ,MAAON,EAAaS,SACtB9B,MAEC,EAIV,GAAekC,EAAAA,EAAAA,MAAKrC,E","sources":["webpack://blocknite/./src/components/Screen/style.module.scss?60f9","components/Screen/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__IzAs8\"};","import styles from './style.module.scss';\nimport { useStateProvider } from '../../context/state';\nimport { CSSProperties, lazy, memo, useEffect, useMemo, useState } from 'react';\n\nconst ParticleCanvas = lazy(() => import(\"../Particles\"));\n\ninterface ScreenProps {\n  id: string;\n  component: React.ReactNode;\n  imageUrl: string;\n  mobileImage: string;\n  screen?: any;\n}\n\nconst Screen: React.FC<ScreenProps> = ({ id, component, imageUrl, mobileImage, screen }) => {\n  const { windowWidth } = useStateProvider();\n  const [showParticles, setShowParticles] = useState(true);\n\n  const containerStyle: CSSProperties = useMemo(() => ({\n    width: '100%',\n    position: 'relative',\n    display: 'flex',\n    overflow: 'hidden',\n    backgroundImage: `url(${windowWidth <= 576 ? mobileImage : imageUrl})`\n  }), [windowWidth, mobileImage, imageUrl]);\n\n  const fullScreenStyle: CSSProperties = useMemo(() => ({\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    left: 0,\n    top: 0\n  }), []);\n\n  const contentStyle = useMemo(() => ({\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden'\n  }), []);\n\n  useEffect(() => {\n    if (windowWidth && showParticles) {\n      setShowParticles(false);\n      const timeout = setTimeout(() => {\n        setShowParticles(true);\n        clearTimeout(timeout)\n      }, 400)\n    }\n  }, [windowWidth])\n\n  return (\n    <div style={containerStyle} className={styles.container} id={id}>\n      {showParticles && (\n        <div style={fullScreenStyle} >\n          <ParticleCanvas {...(windowWidth <= 576 ? screen.mobile : screen.desktop)} />\n        </div>\n      )}\n      <div style={contentStyle}>\n        {component}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Screen);"],"names":["ParticleCanvas","lazy","Screen","_ref","id","component","imageUrl","mobileImage","screen","windowWidth","useStateProvider","showParticles","setShowParticles","useState","containerStyle","useMemo","width","position","display","overflow","backgroundImage","concat","fullScreenStyle","height","left","top","contentStyle","useEffect","timeout","setTimeout","clearTimeout","_jsxs","style","className","styles","children","_jsx","mobile","desktop","memo"],"sourceRoot":""}